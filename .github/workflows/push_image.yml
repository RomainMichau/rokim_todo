#
name: Image Push

# This workflow runs when any of the following occur:
# - A push is made to a branch called `master` or `seed`
# - A tag starting with "v" is created
# - A pull request is created or updated

on:
  push:
    tags:
      - v*
  pull_request:
  # This creates an environment variable called `IMAGE_API_NAME ` with the value `ghtoken_product_demo`.
env:
  IMAGE_API_NAME: rokim_todo_api
  IMAGE_UI_NAME: rokim_todo_ui
#
jobs:
  # This pushes the image to GitHub Packages.
  push_api:
    runs-on: self-hosted
    permissions:
      packages: write
      contents: read
      #
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: ''

      - name: Build image
        run: cd ./rokim_todo && pwd && ls . && docker build . --file Dockerfile --tag $IMAGE_API_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
        #
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_API_NAME

          # This changes all uppercase characters to lowercase.
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # This strips the git ref prefix from the version.
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # This strips the "v" prefix from the tag name.
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # This uses the Docker `latest` tag convention.
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_API_NAME $IMAGE_ID:$VERSION
          docker tag $IMAGE_API_NAME $IMAGE_ID:latest
          docker push $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:latest
  push_ui:
    runs-on: self-hosted
    permissions:
      packages: write
      contents: read
      #
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: ''

      - name: Build image
        run: cd ./rokim_todo_ui && docker build . --file Dockerfile --tag $IMAGE_UI_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
        #
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_UI_NAME

          # This changes all uppercase characters to lowercase.
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # This strips the git ref prefix from the version.
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # This strips the "v" prefix from the tag name.
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # This uses the Docker `latest` tag convention.
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_UI_NAME $IMAGE_ID:$VERSION
          docker tag $IMAGE_UI_NAME $IMAGE_ID:latest
          docker push $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:latest